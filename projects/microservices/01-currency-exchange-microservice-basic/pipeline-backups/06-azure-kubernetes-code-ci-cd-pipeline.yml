trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  tag: 'newlatest-$(Build.BuildId)'  # '$(Build.BuildId)'

# Stage -> 1
# Build the Docker Image
stages:
- stage: Build
  displayName: BuildStage image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - bash: echo "Doing the Image Building!"
    - task: Docker@2
      displayName: 'Building an image of $(Build.BuildId)'
      inputs:
        containerRegistry: 'Azure_Pipeline-Curr-Exce-Doc-Hub'
        repository: 'nikhilmathewfranc/azure1_currency-exchange'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: $(tag)
    # Now we are commenting the above Docker image creation code since it takes time
    # And we are editing the tag and also create a task to copy the .yaml files 
    # Publishing the K8S files (ie, the deployment.yaml file)
    # Again we uncommented the docker image creation file since we are not hard coding the tag and using it
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/*.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)' # PathTopublish means 
        ArtifactName: 'manifests'
        publishLocation: 'Container'
  


# Stage 2
# Download Get K8S files (this will be the deployment.yaml file inside the Cogiguration -> kubernetes -> deployment.yaml inside project)
# Deploy to K8S cluster

- stage: Deploy
  displayName: Deploy image
  jobs:  
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - bash: echo "Doing the Image Building!"

    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'manifests'
        itemPattern: '**/*.yaml'
        downloadPath: '$(System.ArtifactsDirectory)'
    
    - task: KubernetesManifest@1
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'azure-kubernetes-connection'
        namespace: 'default'
        manifests: '$(System.ArtifactsDirectory)/manifests/configuration/kubernetes/deployment.yaml' #'$(System.ArtifactsDirectory)/deployment.yaml'
        containers: 'nikhilmathewfranc/azure1_currency-exchange:$(tag)'
